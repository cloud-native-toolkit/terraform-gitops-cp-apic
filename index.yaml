name: gitops-cp-apic
type: gitops
description: Module to populate a gitops repo with the resources to provision cp-apic
tags:
  - tools
  - gitops
versions:
  - platforms:
      - kubernetes
      - ocp4
    providers:
      - name: gitops
        source: cloud-native-toolkit/gitops
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
      - id: platform-navigator
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-gitops-cp-platform-navigator.git
            version: '>= 1.0.0'
      - id: apic-operator
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-gitops-cp-apic-operator.git
            version: '>= 1.0.0'
      - id: dep-manager
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git
            version: '>= 0.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        default: ''
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: license_id
        type: string
        description: The license id
        moduleRef:
          id: dep-manager
          output: apic.license
      - name: usage
        type: string
        description: The usage as production or nonproduction
        moduleRef:
          id: dep-manager
          output: apic.license_use
      - name: profile
        type: string
        description: apic profile template
        default: '"n1xc7.m48" '
      - name: apic_version
        type: string
        description: apic version
        moduleRef:
          id: dep-manager
          output: apic.version
      - name: storage_class
        type: string
        description: specify block storage class with min 4 IOPs
        default: ''
      - name: entitlement_key
        type: string
        description: Entitlement key value
      - name: catalog
        type: string
        description: The catalog source that should be used to deploy the operator
        default: ibm-operator-catalog
      - name: catalog_namespace
        type: string
        description: The namespace where the catalog has been deployed
        default: openshift-marketplace
    version: v0.0.3
    outputs:
      - name: name
        description: The name of the module
      - name: branch
        description: The branch where the module config has been placed
      - name: namespace
        description: The namespace where the module will be deployed
      - name: server_name
        description: The server where the module will be deployed
      - name: layer
        description: The layer where the module is deployed
      - name: type
        description: The type of module where the module is deployed
  - platforms:
      - kubernetes
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
      - id: apic-operator
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-gitops-cp-apic-operator.git
            version: '>= 1.0.0'
      - id: dep-manager
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git
            version: '>= 0.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        default: ''
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: license_id
        type: string
        description: The license id
        moduleRef:
          id: dep-manager
          output: apic.license
      - name: usage
        type: string
        description: The usage as production or nonproduction
        moduleRef:
          id: dep-manager
          output: apic.license_use
      - name: profile
        type: string
        description: apic profile template
        default: '"n1xc7.m48" '
      - name: apic_version
        type: string
        description: apic version
        moduleRef:
          id: dep-manager
          output: apic.version
      - name: storage_class
        type: string
        description: specify block storage class with min 4 IOPs
        default: ''
      - name: entitlement_key
        type: string
        description: Entitlement key value
      - name: catalog
        type: string
        description: The catalog source that should be used to deploy the operator
        default: ibm-operator-catalog
      - name: catalog_namespace
        type: string
        description: The namespace where the catalog has been deployed
        default: openshift-marketplace
    version: v0.0.2
    outputs:
      - name: name
        description: The name of the module
      - name: branch
        description: The branch where the module config has been placed
      - name: namespace
        description: The namespace where the module will be deployed
      - name: server_name
        description: The server where the module will be deployed
      - name: layer
        description: The layer where the module is deployed
      - name: type
        description: The type of module where the module is deployed
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
      - id: apic-operator
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-gitops-cp-apic-operator.git
            version: '>= 1.0.0'
      - id: dep-manager
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git
            version: '>= 0.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        default: ''
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: license_id
        type: string
        description: The license id
        moduleRef:
          id: dep-manager
          output: apic.license
      - name: usage
        type: string
        description: The usage as production or nonproduction
        moduleRef:
          id: dep-manager
          output: apic.license_use
      - name: profile
        type: string
        description: apic profile template
        default: '"n1xc7.m48" '
      - name: apic_version
        type: string
        description: apic version
        moduleRef:
          id: dep-manager
          output: apic.version
      - name: storage_class
        type: string
        description: specify block storage class with min 4 IOPs
        default: ''
      - name: entitlement_key
        type: string
        description: Entitlement key value
      - name: catalog
        type: string
        description: The catalog source that should be used to deploy the operator
        default: ibm-operator-catalog
      - name: catalog_namespace
        type: string
        description: The namespace where the catalog has been deployed
        default: openshift-marketplace
    version: v0.0.1
    outputs:
      - name: name
        description: The name of the module
      - name: branch
        description: The branch where the module config has been placed
      - name: namespace
        description: The namespace where the module will be deployed
      - name: server_name
        description: The server where the module will be deployed
      - name: layer
        description: The layer where the module is deployed
      - name: type
        description: The type of module where the module is deployed
softwareProvider: ibm-cp
id: github.com/cloud-native-toolkit/terraform-gitops-cp-apic
